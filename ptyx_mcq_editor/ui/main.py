# Form implementation generated from reading ui file 'ui/main.ui'
#
# Created by: PyQt6 UI code generator 6.6.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1047, 726)
        MainWindow.setAcceptDrops(False)
        icon = QtGui.QIcon.fromTheme("applications-utilities")
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.main_grid = QtWidgets.QGridLayout(self.centralwidget)
        self.main_grid.setObjectName("main_grid")
        self.mcq_editor = Qsci.QsciScintilla(parent=self.centralwidget)
        self.mcq_editor.setToolTip("")
        self.mcq_editor.setWhatsThis("")
        self.mcq_editor.setObjectName("mcq_editor")
        self.main_grid.addWidget(self.mcq_editor, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1047, 23))
        self.menubar.setObjectName("menubar")
        self.menuFichier = QtWidgets.QMenu(parent=self.menubar)
        self.menuFichier.setObjectName("menuFichier")
        self.menu_Recent_Files = QtWidgets.QMenu(parent=self.menuFichier)
        self.menu_Recent_Files.setObjectName("menu_Recent_Files")
        self.menuCompilation = QtWidgets.QMenu(parent=self.menubar)
        self.menuCompilation.setObjectName("menuCompilation")
        self.menu_Tools = QtWidgets.QMenu(parent=self.menubar)
        self.menu_Tools.setObjectName("menu_Tools")
        self.menu_Edit = QtWidgets.QMenu(parent=self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menu_propos = QtWidgets.QMenu(parent=self.menubar)
        self.menu_propos.setObjectName("menu_propos")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockWidget = QtWidgets.QDockWidget(parent=MainWindow)
        self.dockWidget.setEnabled(True)
        self.dockWidget.setFloating(False)
        self.dockWidget.setObjectName("dockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.right_dock_grid = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.right_dock_grid.setObjectName("right_dock_grid")
        self.tabWidget = QtWidgets.QTabWidget(parent=self.dockWidgetContents)
        self.tabWidget.setObjectName("tabWidget")
        self.latex_tab = QtWidgets.QWidget()
        self.latex_tab.setObjectName("latex_tab")
        self.latex_tab_grid = QtWidgets.QGridLayout(self.latex_tab)
        self.latex_tab_grid.setObjectName("latex_tab_grid")
        self.latex_editor = Qsci.QsciScintilla(parent=self.latex_tab)
        self.latex_editor.setToolTip("")
        self.latex_editor.setWhatsThis("")
        self.latex_editor.setObjectName("latex_editor")
        self.latex_tab_grid.addWidget(self.latex_editor, 0, 0, 1, 1)
        self.tabWidget.addTab(self.latex_tab, "")
        self.pdf_tab = QtWidgets.QWidget()
        self.pdf_tab.setObjectName("pdf_tab")
        self.pdf_tab_grid = QtWidgets.QGridLayout(self.pdf_tab)
        self.pdf_tab_grid.setObjectName("pdf_tab_grid")
        self.tabWidget.addTab(self.pdf_tab, "")
        self.right_dock_grid.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.dockWidget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.dockWidget)
        self.action_New = QtGui.QAction(parent=MainWindow)
        icon = QtGui.QIcon.fromTheme("document-new")
        self.action_New.setIcon(icon)
        self.action_New.setObjectName("action_New")
        self.action_Open = QtGui.QAction(parent=MainWindow)
        icon = QtGui.QIcon.fromTheme("document-open")
        self.action_Open.setIcon(icon)
        self.action_Open.setObjectName("action_Open")
        self.action_Save = QtGui.QAction(parent=MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save")
        self.action_Save.setIcon(icon)
        self.action_Save.setObjectName("action_Save")
        self.actionSave_as = QtGui.QAction(parent=MainWindow)
        icon = QtGui.QIcon.fromTheme("document-save-as")
        self.actionSave_as.setIcon(icon)
        self.actionSave_as.setObjectName("actionSave_as")
        self.action_Quitter = QtGui.QAction(parent=MainWindow)
        icon = QtGui.QIcon.fromTheme("application-exit")
        self.action_Quitter.setIcon(icon)
        self.action_Quitter.setObjectName("action_Quitter")
        self.action_LaTeX = QtGui.QAction(parent=MainWindow)
        self.action_LaTeX.setObjectName("action_LaTeX")
        self.action_Pdf = QtGui.QAction(parent=MainWindow)
        self.action_Pdf.setObjectName("action_Pdf")
        self.action_Add_MCQ_Editor_to_start_menu = QtGui.QAction(parent=MainWindow)
        self.action_Add_MCQ_Editor_to_start_menu.setObjectName("action_Add_MCQ_Editor_to_start_menu")
        self.actionFind = QtGui.QAction(parent=MainWindow)
        self.actionFind.setObjectName("actionFind")
        self.actionReplace = QtGui.QAction(parent=MainWindow)
        self.actionReplace.setObjectName("actionReplace")
        self.actionNone = QtGui.QAction(parent=MainWindow)
        self.actionNone.setObjectName("actionNone")
        self.menu_Recent_Files.addAction(self.actionNone)
        self.menuFichier.addAction(self.action_New)
        self.menuFichier.addAction(self.menu_Recent_Files.menuAction())
        self.menuFichier.addAction(self.action_Open)
        self.menuFichier.addAction(self.action_Save)
        self.menuFichier.addAction(self.actionSave_as)
        self.menuFichier.addSeparator()
        self.menuFichier.addAction(self.action_Quitter)
        self.menuCompilation.addAction(self.action_LaTeX)
        self.menuCompilation.addAction(self.action_Pdf)
        self.menu_Tools.addAction(self.action_Add_MCQ_Editor_to_start_menu)
        self.menu_Edit.addAction(self.actionFind)
        self.menu_Edit.addAction(self.actionReplace)
        self.menubar.addAction(self.menuFichier.menuAction())
        self.menubar.addAction(self.menuCompilation.menuAction())
        self.menubar.addAction(self.menu_Tools.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menu_propos.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.action_Quitter.triggered.connect(MainWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MCQ Editor"))
        self.menuFichier.setTitle(_translate("MainWindow", "&File"))
        self.menu_Recent_Files.setTitle(_translate("MainWindow", "&Recent Files"))
        self.menuCompilation.setTitle(_translate("MainWindow", "&Make"))
        self.menu_Tools.setTitle(_translate("MainWindow", "&Tools"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.menu_propos.setTitle(_translate("MainWindow", "&About"))
        self.dockWidget.setWindowTitle(_translate("MainWindow", "Output"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.latex_tab), _translate("MainWindow", "LaTeX Code"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.pdf_tab), _translate("MainWindow", "Pdf Rendering"))
        self.action_New.setText(_translate("MainWindow", "&New"))
        self.action_New.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_Open.setText(_translate("MainWindow", "&Open"))
        self.action_Open.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_Save.setText(_translate("MainWindow", "&Save"))
        self.action_Save.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_as.setText(_translate("MainWindow", "Save &as"))
        self.actionSave_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_Quitter.setText(_translate("MainWindow", "&Quitter"))
        self.action_LaTeX.setText(_translate("MainWindow", "&LaTeX"))
        self.action_LaTeX.setShortcut(_translate("MainWindow", "Ctrl+Shift+Return"))
        self.action_Pdf.setText(_translate("MainWindow", "&Pdf"))
        self.action_Pdf.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.action_Add_MCQ_Editor_to_start_menu.setText(_translate("MainWindow", "&Add shortcut to MCQ Editor in the applications menu"))
        self.actionFind.setText(_translate("MainWindow", "&Find"))
        self.actionFind.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionReplace.setText(_translate("MainWindow", "&Replace"))
        self.actionReplace.setShortcut(_translate("MainWindow", "Ctrl+R, Ctrl+H"))
        self.actionNone.setText(_translate("MainWindow", "EMPTY"))
from PyQt6 import Qsci


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
